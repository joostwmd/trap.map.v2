{"version":3,"sources":["pages/Home.js","components/Track.js","components/ArtistProfileHeader.js","pages/ArtistProfile.js","components/MapMarker.js","pages/Map.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Track","track","artistName","artistsOnTrack","artists","useState","theArtists","setTheArtists","useEffect","artistString","artist","name","getArtistsOnTrack","src","album","images","url","slice","controls","preview_url","ArtistProfileHeader","artistPicture","releasedMusic","links","href","spotify","youtube","instagram","ArtistProfile","API_URL","requestBody","artistID","window","location","pathname","split","setArtistName","setArtistPicture","setReleasedMusic","setLinks","topTracks","setTopTracks","getSpotifyData","a","axios","post","response","data","console","log","getDataBaseData","then","spotifyData","albums","trackCount","singlesCount","albumCount","album_type","total_tracks","countTracks","dataBaseData","spotifyLink","youtubeLink","instagramLink","id","map","MapMarker","picture","stlye","height","width","mapboxgl","workerClass","MapboxWorker","Map","berlinViewport","latitude","longitude","zoom","minZoom","berlinBounds","viewport","setViewport","allArtists","setAllArtists","get","res","mapboxApiAccessToken","mapStyle","onViewportChange","newViewport","maxBounds","swLng","swLat","neLng","neLat","isOutOfMaxBounds","coordinates","style","transform","to","_id","Nav","App","className","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.378ed500.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Home() {\n    return (\n        <div>\n            <h1>welcome to trap map</h1>\n        </div>\n    )\n}\n\nexport default Home","import React, { useState, useEffect } from 'react'\n\n\nfunction Track({track, artistName}) {\n\n\n    const API_URL = 'http://localhost:3000'\n\n    const artistsOnTrack = track.artists\n    const [theArtists, setTheArtists] = useState([])\n    \n    const getArtistsOnTrack = () => {\n        //let artistArray = []\n        let artistString = \"\"\n        for (let artist of artistsOnTrack){\n            // if (artist.external_urls.spotify !== undefined){\n            //     artistArray.push({name : artist.name, id : artist.id})\n            // }\n\n            if (artistName !== artist.name){\n                artistString += `${artist.name}, `\n            }\n             \n        }\n        //setTheArtists(artistString)\n        setTheArtists(artistString)\n    }\n\n    \n\n    useEffect(() => {\n        getArtistsOnTrack()\n    }, [])\n\n   \n\n    return (\n        <div>\n            <img src={track.album.images[1].url} />\n            <h4>{track.name}</h4>\n            <h5>feat: {theArtists.slice(0, -2)}</h5>\n            {/* {theArtists.map(artist => {\n                if (artist.id !== undefined){\n                    return (\n                        <a href={`${API_URL}/map/spotifyID:${artist.id}`}>{artist.name} </a>\n                    )\n                } else {\n                    return (\n                        <h5>{artist.name}</h5>\n                    )\n                }\n            })} */}\n            <audio controls>\n                <source src={track.preview_url} />\n            </audio>\n        </div>\n    )\n}\n\nexport default Track","function ArtistProfileHeader({artistName, artistPicture, releasedMusic, links}) {\n    return (\n        <div>\n            <h1>{artistName}</h1>\n            <img src={artistPicture} />\n            <h4>{releasedMusic}</h4>\n\n            <a href={links.spotify}>spotify</a>\n            <a href={links.youtube}>youtube</a>\n            <a href={links.instagram}>insta</a>\n        </div>\n    )\n}\n\nexport default ArtistProfileHeader","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Track from '../components/Track';\nimport ArtistProfileHeader from '../components/ArtistProfileHeader';\n\nfunction ArtistProfile() {\n\n\n    //const API_URL = process.env.API_URL;\n    //const API_URL = 'http://localhost:5005'\n    const API_URL = 'https://trapmapversion2.herokuapp.com'\n\n    const artistID = window.location.pathname.split(\"/\")[2]\n    const requestBody = {artistID}\n\n    //header\n    const [artistName, setArtistName] = useState(\"\")\n    const [artistPicture, setArtistPicture] = useState(\"\")\n    const [releasedMusic, setReleasedMusic] = useState(\"\")\n    const [links, setLinks] = useState({})\n\n\n\n    //tracks\n    const [topTracks, setTopTracks] = useState([])\n   \n    //render\n    \n    \n\n\n    const countTracks = (albums) => {\n        let trackCount = 0\n        let singlesCount = 0\n        let albumCount = 0\n\n        for (let album of albums){\n            if (album.album_type === \"single\"){\n                trackCount++\n                singlesCount++\n            } else if (album.album_type === \"album\"){\n                trackCount += album.total_tracks\n                albumCount++\n            }\n        }\n\n\n        return `tracks : ${trackCount}, singles : ${singlesCount}, albums : ${albumCount}`\n    }\n\n    const getSpotifyData = async () => {\n        const response = await axios.post(`${API_URL}/spotify/loadArtistProfile`, requestBody)\n        const data = await response\n\n        console.log(\"spotify data\", data)\n        return data\n    }\n\n    const getDataBaseData = async () => {\n        const response = await axios.post(`${API_URL}/dataBase/artistProfile`, requestBody)\n        const data = await response\n        console.log(\"db data\", data)\n        return data\n    }\n    \n\n    useEffect( () => {\n\n\n        getSpotifyData()\n            .then(spotifyData => {\n                console.log(spotifyData)\n                //header\n                setArtistName(spotifyData.data[0].name)\n                setArtistPicture(spotifyData.data[0].images[0].url)\n                setReleasedMusic(countTracks(spotifyData.data[2]))\n\n                //tracks\n                setTopTracks(spotifyData.data[1])\n            })\n        getDataBaseData()\n            .then(dataBaseData => {\n                //header\n                setLinks({\n                    \"spotify\" : dataBaseData.data.spotifyLink,\n                    \"youtube\" : dataBaseData.data.youtubeLink,\n                    \"instagram\" : dataBaseData.data.instagramLink\n                })\n            })\n        \n    }, [])\n\n\n    \n    return (\n        <div id=\"profileWrapper\">\n            \n            <ArtistProfileHeader artistName={artistName} artistPicture={artistPicture} releasedMusic={releasedMusic} links={links} />\n\n            {topTracks.map(track => {\n                if (track.preview_url !== null){\n                    return (\n                        <div>\n                            <Track track={track} artistName={artistName}/>\n                        </div>\n                )\n                }\n            })}\n        </div>\n    )\n}\n\nexport default ArtistProfile","import React from 'react'\n\nfunction MapMarker({artist}) {\n    return (\n        <div id=\"mapMakerWrapper\">\n            <img src={artist.picture} stlye={{height : 10, width : 10}}/>\n        </div>\n    )\n}\n\nexport default MapMarker","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport ReactMapGl, {Marker} from \"react-map-gl\"\n\n//components\nimport MapMarker from '../components/MapMarker'\n\n\n\n//deployment bug fix\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport mapboxgl from 'mapbox-gl';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\nmapboxgl.workerClass = MapboxWorker\n\n\n\n\nfunction Map() {\n\n    const berlinViewport = {\n        latitude : 52.520008, \n        longitude : 13.404954,\n        width : \"100w\",\n        height : \"100vh\",\n        zoom : 9,\n        minZoom : 9,\n        berlinBounds : [[13.192625881080286, 52.38949809002746], [13.659758765765956, 52.64256574061617]]\n    }\n\n\n    const isOutOfMaxBounds = (latitude, longitude, maxBounds) => {\n        const [[swLng, swLat], [neLng, neLat]] = maxBounds;\n    \n        return longitude < swLng || longitude > neLng || latitude < swLat || latitude > neLat;\n    };\n\n\n\n    \n    const [viewport, setViewport] = useState(berlinViewport)\n    const [allArtists, setAllArtists] = useState([])\n    //const API_URL = process.env.API_URL\n    //const API_URL = 'http://localhost:5005'\n    const API_URL = 'https://trapmapversion2.herokuapp.com'\n\n\n\n    let size = 40\n\n    useEffect(() => {\n        axios.get(`${API_URL}/dataBase/map`)\n            .then(res => {\n                console.log(\"all artists\", res.data)\n                setAllArtists(res.data)\n                // => spotify name and picture already in db\n            })\n\n        \n    }, [])\n\n\n    return (\n    <div>\n        <ReactMapGl\n            {...viewport}\n            mapboxApiAccessToken = \"pk.eyJ1Ijoiam9vc3R3bWQiLCJhIjoiY2t1NDQ3NmJqMXRwbzJwcGM5a3FuY3B3dCJ9.yyon_mO5Y9sI1WgD-XFDRQ\"\n            mapStyle = \"mapbox://styles/joostwmd/ckvwifepf21kj15pflu8gbkdd\"\n\n            onViewportChange={newViewport => {\n                if (!isOutOfMaxBounds(\n                    newViewport.latitude,\n                    newViewport.longitude,\n                    berlinViewport.berlinBounds\n                ))\n                {\n                    setViewport(newViewport)\n                }\n            }}\n        >   \n            {allArtists.map(artist => {\n                return (\n                    <Marker\n                        latitude={artist.coordinates[1]}\n                        longitude={artist.coordinates[0]}\n\n                    >\n                        <div style={{ transform: `translate(${-size / 2}px,${-size}px)` }}>\n                            <Link to={`${artist._id}`}>\n                                <MapMarker artist={artist} />\n                            </Link>\n                        </div>\n                    </Marker>\n            )})}\n        </ReactMapGl>\n    </div>\n    )\n}\n\nexport default Map","import { Link } from 'react-router-dom'\n\nfunction Nav() {\n    return (\n        <div>\n            <Link to=\"/\">\n                <button>home</button>\n            </Link>\n\n            <Link to=\"/map\">\n                <button>map</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default Nav","import './App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n\n//pages\nimport Home from './pages/Home';\nimport ArtistProfile from './pages/ArtistProfile';\nimport Map from './pages/Map';\n\n//components\nimport Nav from './components/Nav'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Nav />\n        <Routes>\n\n          <Route\n            exact path=\"/\"\n            element={<Home />}\n          />\n\n          <Route \n            exact path=\"/map\"\n            element={<Map />}\n          />\n\n          <Route \n            exact path=\"/map/:artistDB\"\n            element={<ArtistProfile />}\n          />\n\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}