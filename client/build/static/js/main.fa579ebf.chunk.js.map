{"version":3,"sources":["pages/Home.js","components/Track.js","components/ArtistProfileHeader.js","pages/ArtistProfile.js","pages/Map.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Track","track","artistName","artistsOnTrack","artists","useState","theArtists","setTheArtists","useEffect","artistString","artist","name","getArtistsOnTrack","src","album","images","url","controls","preview_url","slice","ArtistProfileHeader","artistPicture","releasedMusic","links","href","spotify","youtube","instagram","ArtistProfile","API_URL","setArtistName","setArtistPicture","setReleasedMusic","setLinks","topTracks","setTopTracks","getArtistsIds","a","artistIds","localStorage","getItem","split","getSpotifyData","spotifyId","requestBody","axios","post","response","data","getDataBaseData","dataBaseId","then","ids","spotifyData","albums","trackCount","singlesCount","albumCount","album_type","total_tracks","countTracks","dataBaseData","spotifyLink","youtubeLink","instagramLink","id","map","Map","mapContainer","useRef","berlinCenter","berlinBounds","mapboxgl","accessToken","features","get","res","feature","picture","_id","spotifyID","coordinates","push","artistToFeatures","current","container","style","center","zoom","minZoom","maxBounds","on","addSource","i","el","document","createElement","className","Marker","setLngLat","geometry","addTo","markers","getElementsByClassName","addEventListener","artistDatabaseId","artistSpotifyId","properties","Storage","setItem","window","location","backgroundImage","size","Number","getZoom","height","width","length","ref","Nav","to","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa579ebf.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Home() {\n    return (\n        <div>\n            <h1>welcome to trap map</h1>\n        </div>\n    )\n}\n\nexport default Home","import React, { useState, useEffect } from 'react'\n\n\nfunction Track({track, artistName}) {\n\n\n   \n\n    const artistsOnTrack = track.artists\n    const [theArtists, setTheArtists] = useState([])\n    \n    const getArtistsOnTrack = () => {\n        \n        let artistString = \"feat: \"\n        for (let artist of artistsOnTrack){\n\n            if (artistName !== artist.name){\n                artistString += `${artist.name}, `\n            }\n             \n        }\n        setTheArtists(artistString)\n    }\n\n    \n\n    useEffect(() => {\n        getArtistsOnTrack()\n    }, [])\n\n   \n    //no feat \n    if(theArtists === \"feat: \"){\n       return (\n        <div>\n            <img src={track.album.images[1].url} />\n            <h4>{track.name}</h4>\n        \n            <audio controls>\n                <source src={track.preview_url} />\n            </audio>\n        </div>\n    )\n    }\n\n    if(theArtists !== \"feat: \"){\n        return (\n        <div>\n            <img src={track.album.images[1].url} />\n            <h4>{track.name}</h4>\n            <h5>{theArtists.slice(0, -2)}</h5>\n\n            <audio controls>\n                <source src={track.preview_url} />\n            </audio>\n        </div>\n        )\n    }\n   \n}\n\nexport default Track\n","function ArtistProfileHeader({artistName, artistPicture, releasedMusic, links}) {\n    return (\n        <div>\n            <h1>{artistName}</h1>\n            <img src={artistPicture} />\n            <h4>{releasedMusic}</h4>\n\n            <a href={links.spotify}>spotify</a>\n            <a href={links.youtube}>youtube</a>\n            <a href={links.instagram}>insta</a>\n        </div>\n    )\n}\n\nexport default ArtistProfileHeader","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Track from '../components/Track';\nimport ArtistProfileHeader from '../components/ArtistProfileHeader';\n\nfunction ArtistProfile() {\n\n    //for develpoment\n    //const API_URL = 'http://localhost:5005'\n    \n    const API_URL = 'https://trapmapversion2.herokuapp.com'\n\n    //header\n    const [artistName, setArtistName] = useState(\"\")\n    const [artistPicture, setArtistPicture] = useState(\"\")\n    const [releasedMusic, setReleasedMusic] = useState(\"\")\n    const [links, setLinks] = useState({})\n\n\n\n    //tracks\n    const [topTracks, setTopTracks] = useState([])\n   \n    //render\n    \n    \n\n\n    const countTracks = (albums) => {\n        let trackCount = 0\n        let singlesCount = 0\n        let albumCount = 0\n\n        for (let album of albums){\n            if (album.album_type === \"single\"){\n                trackCount++\n                singlesCount++\n            } else if (album.album_type === \"album\"){\n                trackCount += album.total_tracks\n                albumCount++\n            }\n        }\n\n\n        return `tracks : ${trackCount}, singles : ${singlesCount}, albums : ${albumCount}`\n    }\n\n    const getArtistsIds = async () => {\n        const artistIds = localStorage.getItem('artistIds')\n        return artistIds.split(':')\n    }\n\n    const getSpotifyData = async (spotifyId) => {\n        const requestBody = {spotifyId}\n\n        const response = await axios.post(`${API_URL}/spotify/loadArtistProfile`, requestBody)\n        const data = await response\n\n        return data\n    }\n\n    const getDataBaseData = async (dataBaseId) => {\n        const requestBody = {dataBaseId}\n\n        const response = await axios.post(`${API_URL}/dataBase/artistProfile`, requestBody)\n        const data = await response\n\n        return data\n    }\n    \n\n    useEffect( () => {\n        \n        getArtistsIds()\n            .then(ids => {\n                getSpotifyData(ids[0])\n                    .then(spotifyData => { \n\n                        //header\n                        setArtistName(spotifyData.data[0].name)\n                        setArtistPicture(spotifyData.data[0].images[0].url)\n                        setReleasedMusic(countTracks(spotifyData.data[2]))\n\n                        //tracks\n                        setTopTracks(spotifyData.data[1])\n                })\n\n                getDataBaseData(ids[1])\n                    .then(dataBaseData => {\n    \n                        //header\n                        setLinks({\n                            \"spotify\" : dataBaseData.data.spotifyLink,\n                            \"youtube\" : dataBaseData.data.youtubeLink,\n                            \"instagram\" : dataBaseData.data.instagramLink\n                        })\n                    })\n\n            })        \n    }, [])\n\n\n    return (\n        <div id=\"profileWrapper\">\n            \n            <ArtistProfileHeader artistName={artistName} artistPicture={artistPicture} releasedMusic={releasedMusic} links={links} />\n\n            {topTracks.map(track => {\n                if (track.preview_url !== null){\n                    return (\n                        <div key={track.name}>\n                            <Track track={track} artistName={artistName}/>\n                        </div>\n                )\n                }\n            })}\n        </div>\n    )\n}\n\nexport default ArtistProfile","import React from 'react'\nimport { useEffect, useRef } from 'react'\nimport axios from 'axios'\n\n\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\n\nfunction Map() {\n\n    const API_URL = 'https://trapmapversion2.herokuapp.com'\n    const CLIENT_URL = 'https://trapmapversion2.herokuapp.com'\n    \n    //for development\n    //const CLIENT_URL = 'http://localhost:3000'\n    //const API_URL = 'http://localhost:5005'\n    \n    \n    //map props\n    const mapContainer = useRef(null);\n    const map = useRef(null);\n    const berlinCenter = [13.404954, 52.520008]\n    const berlinBounds = [\n        [12.75, 52.25],\n        [14, 52.75]\n    ]\n\n    mapboxgl.accessToken = \"pk.eyJ1Ijoiam9vc3R3bWQiLCJhIjoiY2t1NDQ3NmJqMXRwbzJwcGM5a3FuY3B3dCJ9.yyon_mO5Y9sI1WgD-XFDRQ\"\n\n\n    //change the db artist data into mapboxgl format\n    const features = []\n    const artistToFeatures = (artists) => {\n        for (let artist of artists){\n            const feature = {\n                'type' : 'feature',\n\n                'properties' : {\n                    'artistName' : artist.name,\n                    'artistPicture' : artist.picture, \n                    'artistDatabaseId' : artist._id,\n                    'artistSpotifyId' : artist.spotifyID\n                },\n\n                'geometry' : {\n                    'type' : 'Point',\n                    'coordinates' : artist.coordinates\n                }\n            }\n        \n            features.push(feature)\n        }\n    }\n\n\n    //create function that enables the marker onClick function\n    //to send ids to the following page\n\n    const sendArtistIds = (artistDatabaseId, artistSpotifyId) => {\n\n        if (typeof(Storage) !== \"undefined\") {\n            localStorage.setItem('artistIds', `${artistSpotifyId}:${artistDatabaseId}`);\n        } else {\n            // Sorry! No Web Storage support..\n        }\n    }   \n\n    //build redirect url\n    const redirectToArtistProfilePage = (artistName) => {\n        window.location.href = `${CLIENT_URL}/map/${artistName}`\n        \n    }\n\n    useEffect(() => {\n\n        //get all artist data form db\n        axios.get(`${API_URL}/dataBase/map`)\n            .then(res => {\n                //chnage data into mapboxgl format with function\n                artistToFeatures(res.data)\n            })\n\n        \n        //create the map object\n        if (map.current) return; // initialize map only once\n            map.current = new mapboxgl.Map({        \n            container: mapContainer.current,\n            style: 'mapbox://styles/joostwmd/ckvwifepf21kj15pflu8gbkdd',\n            center: berlinCenter,\n            zoom: 8.5,\n            minZoom : 8.5,\n            maxBounds : berlinBounds\n        })\n\n        //load artist data in mapbox format onto the map object\n        map.current.on('load', () => {\n            map.current.addSource('artists', {\n                'type' : 'geojson', \n                'data' : {\n                    'type' : 'FeatureCollection', \n                    'features' : features\n                }\n            })\n\n\n        //create a marker(img) for each artists (feature) object\n        for (let i = 0; i < features.length; i++){\n            //create divs\n            const el = document.createElement('div')\n            //const el = document.createElement('img')\n            el.className = 'marker'\n\n            //add the divs to mapboxgl marker \n            new mapboxgl.Marker(el).setLngLat(features[i].geometry.coordinates).addTo(map.current)\n                    \n            //create array for all markers\n            const markers = document.getElementsByClassName('marker')\n                \n                //add functionality and design (src for marker img and scaleControl)  \n                for (let i = 0; i < markers.length; i++){\n                    markers[i].addEventListener('click', () => {\n                        sendArtistIds(features[i].properties.artistDatabaseId, features[i].properties.artistSpotifyId)\n                        redirectToArtistProfilePage(features[i].properties.artistName)\n                    })\n                    \n                    //add url to background img\n                    markers[i].style.backgroundImage = `url(${features[i].properties.artistPicture})`\n                    \n                    //add image src\n                    //markers[i].setAttribute('src', `${features[i].properties.artistPicture}`)\n                    \n\n                    //resize markers in zoom\n                    map.current.on('zoom', () => {\n                        const initialZoom = 9.255562090280671 //even if zoom is set to 8.5???\n                        let size = (Number((map.current.getZoom()) - initialZoom) * 15) + 30\n                        markers[i].style.height = `${size}px`\n                        markers[i].style.width = `${size}px`\n                    })\n                }\n            }\n        })\n}, [])\n\n    \n\n\n\n    return (\n        <div>\n          <div ref={mapContainer} className=\"map-container\" />\n        </div>\n    )\n}\n\nexport default Map\n","import { Link } from 'react-router-dom'\n\nfunction Nav() {\n    return (\n        <div>\n            <Link to=\"/\">\n                <button>home</button>\n            </Link>\n\n            <Link to=\"/map\">\n                <button>map</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default Nav","import './App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n\n//pages\nimport Home from './pages/Home';\nimport ArtistProfile from './pages/ArtistProfile';\nimport Map from './pages/Map';\n\n\n//components\nimport Nav from './components/Nav'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Nav />\n        <Routes>\n\n          <Route\n            exact path=\"/\"\n            element={<Home />}\n          />\n\n          <Route \n            exact path=\"/map\"\n            element={<Map />}\n          />\n\n          <Route \n            exact path=\"/map/:artistName\"\n            element={<ArtistProfile />}\n          />\n\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}