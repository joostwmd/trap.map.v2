{"version":3,"sources":["pages/Home.js","pages/ArtistProfile.js","pages/Map.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","email","setEmail","to","value","onChange","e","target","placeholder","type","onClick","requestBody","axios","post","href","ArtistProfile","API_URL","artistName","setArtistName","artistDatabaseId","setArtistDatabaseId","artistPicture","setArtistPicture","releasedMusic","setReleasedMusic","links","setLinks","topTracks","setTopTracks","createFeaturesString","artists","featuresString","artist","name","slice","getArtistsIds","a","artistIds","localStorage","getItem","split","getSpotifyData","spotifyId","response","data","getDataBaseData","dataBaseId","addSnippetPlayed","useEffect","then","ids","spotifyData","console","log","images","url","albums","trackCount","singlesCount","albumCount","album","album_type","total_tracks","countTracks","dataBaseData","_id","spotifyLink","appleMusicLink","youtubeLink","instagramLink","addTrapMapProfileVisit","id","src","addSpotifyProfileVisit","spotify","addAppleMusicProfileVisit","appleMusic","addYoutubeProfileVisit","youtube","addInstagramProfileVisit","instagram","map","track","length","class","controls","onPlay","preview_url","Map","mapContainer","useRef","berlinCenter","berlinBounds","mapboxgl","accessToken","features","get","res","feature","picture","spotifyID","coordinates","push","artistToFeatures","current","container","style","center","zoom","minZoom","maxBounds","on","addSource","i","el","document","createElement","className","Marker","setLngLat","geometry","addTo","markers","getElementsByClassName","addEventListener","artistSpotifyId","properties","Storage","setItem","window","location","backgroundImage","size","Number","getZoom","height","width","ref","Nav","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fb79e78f.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\nimport { useState } from 'react'\nimport axios from 'axios'\n\nfunction Home() {\n    \n    const API_URL = 'https://trapmapversion2.herokuapp.com'\n    const [email, setEmail] = useState(\"\")\n\n    const singUpForBetaKey = () => {\n        const requestBody = {email}\n        axios.post(`${API_URL}/traffic/addSignUpForBetaKey`, requestBody)\n    }\n\n    return (\n        <div>\n            <h1>welcome to trap map</h1>\n\n            <p>new plattfrom to discover music: no algorithms, no playlists, just you and the music</p>\n            <Link to=\"/map\">\n                <button>check out the demo version</button>\n            </Link>\n\n            <p>leveraging blockchain technology to build the plattform with you</p>\n\n            <h5>some timeline</h5>\n\n            <h2>sign-up for the beta-key of the official trap map app</h2>\n            <input \n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                placeholder=\"your email adress\"\n                type=\"email\"\n            >\n            </input>\n\n            <button onClick={singUpForBetaKey}>sign up</button>\n\n            <h2>do you want to get on the map? DM us on insta</h2><a href=\"https://www.instagram.com/mapmusic.berlin/\">insta</a>\n\n        </div>\n    )\n}\n\nexport default Home","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Track from '../components/Track';\nimport ArtistProfileHeader from '../components/ArtistProfileHeader';\n\nfunction ArtistProfile() {\n\n    //for develpoment\n    //const API_URL = 'http://localhost:5005'\n    \n    const API_URL = 'https://trapmapversion2.herokuapp.com'\n\n    //artist info\n    const [artistName, setArtistName] = useState(\"\")\n    const [artistDatabaseId, setArtistDatabaseId] = useState(\"\")\n    const [artistPicture, setArtistPicture] = useState(\"\")\n    const [releasedMusic, setReleasedMusic] = useState(\"\")\n    const [links, setLinks] = useState({})\n    const [topTracks, setTopTracks] = useState([])\n\n    //music related functions\n    const countTracks = (albums) => {\n        let trackCount = 0\n        let singlesCount = 0\n        let albumCount = 0\n\n        for (let album of albums){\n            if (album.album_type === \"single\"){\n                trackCount++\n                singlesCount++\n            } else if (album.album_type === \"album\"){\n                trackCount += album.total_tracks\n                albumCount++\n            }\n        }\n\n\n        return `tracks : ${trackCount}, singles : ${singlesCount}, albums : ${albumCount}`\n    }\n\n    const createFeaturesString = (artists) => {\n        let featuresString = \"feat: \"\n        for (let artist of artists){\n            if (artistName !== artist.name){\n                featuresString += `${artist.name}, `\n            } \n        }\n        return featuresString.slice(0, -2)\n    }\n\n\n\n    //fetch data function\n    const getArtistsIds =  async () => {\n        const artistIds = localStorage.getItem('artistIds')\n        return artistIds.split(':')\n    }\n\n    const getSpotifyData = async (spotifyId) => {\n        const requestBody = {spotifyId}\n\n        const response = await axios.post(`${API_URL}/spotify/loadArtistProfile`, requestBody)\n        const data = await response\n\n        return data\n    }\n\n    const getDataBaseData = async (dataBaseId) => {\n        const requestBody = {dataBaseId}\n\n        const response = await axios.post(`${API_URL}/dataBase/artistProfile`, requestBody)\n        const data = await response\n\n        return data\n    }\n    \n\n    //traffic functions\n    const addTrapMapProfileVisit = (dataBaseId) => {\n        let requestBody = {dataBaseId}\n        axios.post(`${API_URL}/traffic/addTrapMapProfileVisit`, requestBody)\n    }\n\n    const addSpotifyProfileVisit = (dataBaseId) => {\n        let requestBody = {dataBaseId}\n        axios.post(`${API_URL}/traffic/addSpotifyProfileVisit`, requestBody)\n    }\n\n    const addAppleMusicProfileVisit = (dataBaseId) => {\n        let requestBody = {dataBaseId}\n        axios.post(`${API_URL}/traffic/addAppleMusicProfileVisit`, requestBody)\n    }\n\n    const addYoutubeProfileVisit = (dataBaseId) => {\n        let requestBody = {dataBaseId}\n        axios.post(`${API_URL}/traffic/addYoutubeProfileVisit`, requestBody)\n    }\n\n    const addInstagramProfileVisit = (dataBaseId) => {\n        let requestBody = {dataBaseId}\n        axios.post(`${API_URL}/traffic/addInstagramProfileVisit`, requestBody)\n    }\n\n\n    const addSnippetPlayed = (dataBaseId) => {\n        let requestBody = {dataBaseId}\n        axios.post(`${API_URL}/traffic/addSnippetPlayed`, requestBody)\n    }\n\n\n    useEffect( () => {\n        \n        getArtistsIds()\n            .then(ids => {\n                getSpotifyData(ids[0])\n                    .then(spotifyData => { \n                        console.log(spotifyData)\n                        //header\n                        setArtistName(spotifyData.data[0].name)\n                        setArtistPicture(spotifyData.data[0].images[0].url)\n                        setReleasedMusic(countTracks(spotifyData.data[2]))\n\n                        //tracks\n                        setTopTracks(spotifyData.data[1])\n                })\n\n                getDataBaseData(ids[1])\n                    .then(dataBaseData => {\n                        setArtistDatabaseId(dataBaseData.data._id)\n                        //header\n                        setLinks({\n                            \"spotify\" : dataBaseData.data.spotifyLink,\n                            \"appleMusic\" : dataBaseData.data.appleMusicLink,\n                            \"youtube\" : dataBaseData.data.youtubeLink,\n                            \"instagram\" : dataBaseData.data.instagramLink\n                        })\n\n                        //add trapMap visits\n                        addTrapMapProfileVisit(dataBaseData.data._id)\n                    })\n\n            })        \n    }, [])\n\n    return (\n        <div>\n            <div id=\"artistProfileHeader\">\n                <h1>{artistName}</h1>\n                <img src={artistPicture} />\n                <h4>{releasedMusic}</h4>\n\n                <div onClick={() => {addSpotifyProfileVisit(artistDatabaseId)}}>\n                    <a href={links.spotify}>spotify</a>\n                </div>\n\n                <div onClick={() => {addAppleMusicProfileVisit(artistDatabaseId)}}>\n                    <a href={links.appleMusic}>apple music</a>\n                </div>\n\n                <div onClick={() => {addYoutubeProfileVisit(artistDatabaseId)}}>\n                    <a href={links.youtube}>youtube</a>\n                </div>\n\n                <div onClick={() => {addInstagramProfileVisit(artistDatabaseId)}}>\n                    <a href={links.instagram}>insta</a>\n                </div>\n            </div>\n\n            <div id=\"tracks\">\n                {topTracks.map(track => {\n                    if (track.artists.length === 1){\n                        return (\n                            <div class=\"trackWithoutFeatures\">\n                                <img src={track.album.images[1].url} />\n                                <h4>{track.name}</h4>\n        \n                                <audio controls onPlay={() => {addSnippetPlayed(artistDatabaseId)}}>\n                                    <source src={track.preview_url} />\n                                </audio>\n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div class=\"trackWithFeatures\">\n                                <img src={track.album.images[1].url} />\n                                <h4>{track.name}</h4>\n                                <h5>{createFeaturesString(track.artists)}</h5>\n        \n                                <audio controls onPlay={() => {addSnippetPlayed(artistDatabaseId)}}>\n                                    <source src={track.preview_url} />\n                                </audio>\n                            </div>\n                        )\n                    }\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default ArtistProfile\n\n","import React from 'react'\nimport { useEffect, useRef } from 'react'\nimport axios from 'axios'\n\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\n\nfunction Map() {\n\n    const API_URL = 'https://trapmapversion2.herokuapp.com'\n    const CLIENT_URL = 'https://trapmapversion2.herokuapp.com'\n    \n    //for development\n    // const CLIENT_URL = 'http://localhost:3000'\n    // const API_URL = 'http://localhost:5005'\n    \n    \n    //map props\n    const mapContainer = useRef(null);\n    const map = useRef(null);\n    const berlinCenter = [13.404954, 52.520008]\n    const berlinBounds = [\n        [12.75, 52.25],\n        [14, 52.75]\n    ]\n\n    mapboxgl.accessToken = \"pk.eyJ1Ijoiam9vc3R3bWQiLCJhIjoiY2t1NDQ3NmJqMXRwbzJwcGM5a3FuY3B3dCJ9.yyon_mO5Y9sI1WgD-XFDRQ\"\n\n\n    //change the db artist data into mapboxgl format\n    const features = []\n    const artistToFeatures = (artists) => {\n        for (let artist of artists){\n            const feature = {\n                'type' : 'feature',\n\n                'properties' : {\n                    'artistName' : artist.name,\n                    'artistPicture' : artist.picture, \n                    'artistDatabaseId' : artist._id,\n                    'artistSpotifyId' : artist.spotifyID\n                },\n\n                'geometry' : {\n                    'type' : 'Point',\n                    'coordinates' : artist.coordinates\n                }\n            }\n        \n            features.push(feature)\n        }\n    }\n\n\n    //create function that enables the marker onClick function\n    //to send ids to the following page\n\n    const sendArtistIds = (artistDatabaseId, artistSpotifyId) => {\n\n        if (typeof(Storage) !== \"undefined\") {\n            localStorage.setItem('artistIds', `${artistSpotifyId}:${artistDatabaseId}`);\n        } else {\n            // Sorry! No Web Storage support..\n        }\n    }   \n\n    //build redirect url\n    const redirectToArtistProfilePage = (artistName) => {\n        window.location.href = `${CLIENT_URL}/map/${artistName}`\n        \n    }\n\n    useEffect(() => {\n\n        //get all artist data form db\n        axios.get(`${API_URL}/dataBase/map`)\n            .then(res => {\n                //chnage data into mapboxgl format with function\n                artistToFeatures(res.data)\n            })\n\n        \n        //create the map object\n        if (map.current) return; // initialize map only once\n            map.current = new mapboxgl.Map({        \n            container: mapContainer.current,\n            style: 'mapbox://styles/joostwmd/ckufanbzo4qlm18qj3w744lbx',\n            center: berlinCenter,\n            zoom: 8.5,\n            minZoom : 8.5,\n            maxBounds : berlinBounds\n        })\n\n        //load artist data in mapbox format onto the map object\n        map.current.on('load', () => {\n            map.current.addSource('artists', {\n                'type' : 'geojson', \n                'data' : {\n                    'type' : 'FeatureCollection', \n                    'features' : features\n                }\n            })\n\n\n        //create a marker(img) for each artists (feature) object\n        for (let i = 0; i < features.length; i++){\n            //create divs\n            const el = document.createElement('div')\n            //const el = document.createElement('img')\n            el.className = 'marker'\n\n            //add the divs to mapboxgl marker \n            new mapboxgl.Marker(el).setLngLat(features[i].geometry.coordinates).addTo(map.current)\n                    \n            //create array for all markers\n            const markers = document.getElementsByClassName('marker')\n                \n                //add functionality and design (src for marker img and scaleControl)  \n                for (let i = 0; i < markers.length; i++){\n                    markers[i].addEventListener('click', () => {\n                        sendArtistIds(features[i].properties.artistDatabaseId, features[i].properties.artistSpotifyId)\n                        redirectToArtistProfilePage(features[i].properties.artistName)\n                    })\n                    \n                    //add url to background img\n                    markers[i].style.backgroundImage = `url(${features[i].properties.artistPicture})`\n\n                    //add image src\n                    //markers[i].setAttribute('src', `${features[i].properties.artistPicture}`)\n                    \n\n                    //resize markers in zoom\n                    map.current.on('zoom', () => {\n                        const initialZoom = 9.255562090280671 //even if zoom is set to 8.5???\n                        let size = (Number((map.current.getZoom()) - initialZoom) * 15) + 30\n                        markers[i].style.height = `${size}px`\n                        markers[i].style.width = `${size}px`\n                    })\n                }\n            }\n        })\n}, [])\n\n    \n\n\n\n    return (\n        <div>\n          <div ref={mapContainer} className=\"map-container\" />\n        </div>\n    )\n}\n\nexport default Map\n","import { Link } from 'react-router-dom'\n\nfunction Nav() {\n    return (\n        <div id=\"nav\">\n            <Link to=\"/\">\n                <button>home</button>\n            </Link>\n\n            <Link to=\"/map\">\n                <button>map</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default Nav","import './App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n\n//pages\nimport Home from './pages/Home';\nimport ArtistProfile from './pages/ArtistProfile';\nimport Map from './pages/Map';\n\n\n//components\nimport Nav from './components/Nav'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Nav />\n        <Routes>\n\n          <Route\n            exact path=\"/\"\n            element={<Home />}\n          />\n\n          <Route \n            exact path=\"/map\"\n            element={<Map />}\n          />\n\n          <Route \n            exact path=\"/map/:artistName\"\n            element={<ArtistProfile />}\n          />\n\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}