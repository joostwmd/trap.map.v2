{"version":3,"sources":["pages/Home.js","components/Track.js","components/ArtistProfileHeader.js","pages/ArtistProfile.js","components/MapMarker.js","pages/Map.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Track","track","src","album","images","url","name","controls","preview_url","ArtistProfileHeader","artistName","artistPicture","releasedMusic","links","href","spotify","youtube","instagram","ArtistProfile","API_URL","requestBody","artistDB","window","location","pathname","split","useState","setArtistName","setArtistPicture","setReleasedMusic","setLinks","topTracks","setTopTracks","getSpotifyData","a","axios","post","response","data","console","log","getDataBaseData","useEffect","then","spotifyData","albums","trackCount","singlesCount","albumCount","album_type","total_tracks","countTracks","dataBaseData","spotifyLink","youtubeLink","instagramLink","id","map","MapMarker","mapboxgl","workerClass","MapboxWorker","Map","berlinViewport","latitude","longitude","width","height","zoom","minZoom","berlinBounds","viewport","setViewport","setAllArtists","get","res","mapboxApiAccessToken","mapStyle","onViewportChange","newViewport","maxBounds","swLng","swLat","neLng","neLat","isOutOfMaxBounds","Nav","to","App","className","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d25597a.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Home() {\n    return (\n        <div>\n            <h1>welcome to trap map</h1>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\nfunction Track({track}) {\n    return (\n        <div>\n            <img src={track.album.images[1].url} />\n            <h4>{track.name}</h4>\n            <audio controls>\n                <source src={track.preview_url} />\n            </audio>\n        </div>\n    )\n}\n\nexport default Track","function ArtistProfileHeader({artistName, artistPicture, releasedMusic, links}) {\n    return (\n        <div>\n            <h1>{artistName}</h1>\n            <img src={artistPicture} />\n            <h4>{releasedMusic}</h4>\n\n            <a href={links.spotify}>spotify</a>\n            <a href={links.youtube}>youtube</a>\n            <a href={links.instagram}>insta</a>\n        </div>\n    )\n}\n\nexport default ArtistProfileHeader","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Track from '../components/Track';\nimport ArtistProfileHeader from '../components/ArtistProfileHeader';\n\nfunction ArtistProfile() {\n\n\n    //const API_URL = process.env.API_URL;\n    //const API_URL = 'http://localhost:5005'\n    const API_URL = 'https://trapmapversion2.herokuapp.com'\n\n    const artistDB = window.location.pathname.split(\"/\")[2]\n    const requestBody = {artistDB}\n\n    //header\n    const [artistName, setArtistName] = useState(\"\")\n    const [artistPicture, setArtistPicture] = useState(\"\")\n    const [releasedMusic, setReleasedMusic] = useState(\"\")\n    const [links, setLinks] = useState({})\n\n\n\n    //tracks\n    const [topTracks, setTopTracks] = useState([])\n   \n    //render\n    \n    \n\n\n    const countTracks = (albums) => {\n        let trackCount = 0\n        let singlesCount = 0\n        let albumCount = 0\n\n        for (let album of albums){\n            if (album.album_type === \"single\"){\n                trackCount++\n                singlesCount++\n            } else if (album.album_type === \"album\"){\n                trackCount += album.total_tracks\n                albumCount++\n            }\n        }\n\n\n        return `tracks : ${trackCount}, singles : ${singlesCount}, albums : ${albumCount}`\n    }\n\n    const getSpotifyData = async () => {\n        const response = await axios.post(`${API_URL}/spotify/loadArtistProfile`, requestBody)\n        const data = await response\n\n        console.log(\"spotify data\", data)\n        return data\n    }\n\n    const getDataBaseData = async () => {\n        const response = await axios.post(`${API_URL}/dataBase/artistProfile`, requestBody)\n        const data = await response\n        console.log(\"db data\", data)\n        return data\n    }\n    \n\n    useEffect( () => {\n\n        \n\n        getSpotifyData()\n            .then(spotifyData => {\n                //header\n                setArtistName(spotifyData.data[0].name)\n                setArtistPicture(spotifyData.data[0].images[0].url)\n                setReleasedMusic(countTracks(spotifyData.data[2]))\n\n                //tracks\n                setTopTracks(spotifyData.data[1])\n            })\n        getDataBaseData()\n            .then(dataBaseData => {\n                //header\n                setLinks({\n                    \"spotify\" : dataBaseData.data.spotifyLink,\n                    \"youtube\" : dataBaseData.data.youtubeLink,\n                    \"instagram\" : dataBaseData.data.instagramLink\n                })\n            })\n        \n    }, [])\n\n    return (\n        <div id=\"profileWrapper\">\n            \n            <ArtistProfileHeader artistName={artistName} artistPicture={artistPicture} releasedMusic={releasedMusic} links={links} />\n\n            {topTracks.map(track => {\n                if (track.preview_url !== null){\n                    return (\n                        <div>\n                            <Track track={track} />\n                        </div>\n                )\n                }\n            })}\n        </div>\n    )\n}\n\nexport default ArtistProfile","import React from 'react'\n\nfunction MapMarker({artist}) {\n    return (\n        <div id=\"mapMakerWrapper\">\n            <img src={artist.picture} stlye={{height : 10, width : 10}}/>\n        </div>\n    )\n}\n\nexport default MapMarker","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport ReactMapGl, {Marker} from \"react-map-gl\"\nimport MapMarker from '../components/MapMarker'\n\n\n\n//deployment bug fix\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport mapboxgl from 'mapbox-gl';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\nmapboxgl.workerClass = MapboxWorker\n\n\n//components \n\n\n\nfunction Map() {\n\n    const berlinViewport = {\n        latitude : 52.520008, \n        longitude : 13.404954,\n        width : \"100w\",\n        height : \"100vh\",\n        zoom : 9,\n        minZoom : 9,\n        berlinBounds : [[13.192625881080286, 52.38949809002746], [13.659758765765956, 52.64256574061617]]\n    }\n\n    const isOutOfMaxBounds = (latitude, longitude, maxBounds) => {\n        const [[swLng, swLat], [neLng, neLat]] = maxBounds;\n    \n        return longitude < swLng || longitude > neLng || latitude < swLat || latitude > neLat;\n    };\n\n\n\n    \n    const [viewport, setViewport] = useState(berlinViewport)\n    const [allArtists, setAllArtists] = useState([])\n    //const API_URL = process.env.API_URL\n    //const API_URL = 'http://localhost:5005'\n    const API_URL = 'https://trapmapversion2.herokuapp.com'\n\n\n\n    useEffect(() => {\n        axios.get(`${API_URL}/dataBase/map`)\n            .then(res => {\n                console.log(\"all artists\", res.data)\n                setAllArtists(res.data)\n                // => spotify name and picture already in db\n            })\n\n        \n    }, [])\n\n\n\n    return (\n    <div>\n        <ReactMapGl\n            {...viewport}\n            mapboxApiAccessToken = \"pk.eyJ1Ijoiam9vc3R3bWQiLCJhIjoiY2t1NDQ3NmJqMXRwbzJwcGM5a3FuY3B3dCJ9.yyon_mO5Y9sI1WgD-XFDRQ\"\n            mapStyle = \"mapbox://styles/joostwmd/ckvwifepf21kj15pflu8gbkdd\"\n\n            onViewportChange={newViewport => {\n                if (!isOutOfMaxBounds(\n                    newViewport.latitude,\n                    newViewport.longitude,\n                    berlinViewport.berlinBounds\n                ))\n                {\n                    setViewport(newViewport)\n                }\n            }}\n        >\n            <Marker \n                latitude={52.520008}\n                longitude={13.404954}\n            >\n                test\n            </Marker>\n            {/* {allArtists.map(artist => {\n                return (\n                    <Marker\n                        latitude={artist.coordinates[1]}\n                        longitude={artist.coordinates[0]}\n                    >\n                        <Link to={`${artist._id}`}>\n                            <MapMarker artist={artist} />\n                        </Link>\n                    </Marker>\n            )})} */}\n        </ReactMapGl>\n    </div>\n    )\n}\n\nexport default Map","import { Link } from 'react-router-dom'\n\nfunction Nav() {\n    return (\n        <div>\n            <Link to=\"/\">\n                <button>home</button>\n            </Link>\n\n            <Link to=\"/map\">\n                <button>map</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default Nav","import './App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n\n//pages\nimport Home from './pages/Home';\nimport ArtistProfile from './pages/ArtistProfile';\nimport Map from './pages/Map';\n\n//components\nimport Nav from './components/Nav'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Nav />\n        <Routes>\n\n          <Route\n            exact path=\"/\"\n            element={<Home />}\n          />\n\n          <Route \n            exact path=\"/map\"\n            element={<Map />}\n          />\n\n          <Route \n            exact path=\"/map/:artistDB\"\n            element={<ArtistProfile />}\n          />\n\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}